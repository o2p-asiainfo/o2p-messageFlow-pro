<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="eaap-op2-messagearrange-endpoint">
	
	<!-- ###############  SQL  ################################## -->
	
	<!-- 获取新的消息流端点序列ID-->
	<select id="getEndpointSequence" resultClass="String" >	
		select CONVERT(nextval('SEQ_ENDPOINT'), CHAR) endpoint_id
	</select>
	
	<!-- 获取端点数据类型 -->
	<select id="getData_TypeList" parameterClass="String" resultClass="java.util.HashMap" >		
		select * from data_type order by data_type_id
	</select>	
	
	<!-- 获取端点规格列表 -->
	<select id="getEndpointSpecList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >		
		select CONVERT(endpoint_spec_id, CHAR) endpoint_spec_id, endpoint_spec_code, endpoint_spec_name, 
			endpoint_spec_desc, state, endpoint_spec_pic ,endpoint_spec_pro_url
		from endpoint_spec where state='A'   order by sort asc
	</select>
	
	<!-- 获取属性规格列表 -->
	<select id="getAttrSpecList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >		
		select CONVERT(attr_spec_id, CHAR) attr_spec_id, attr_spec_name, attr_spec_code, default_value, 
			nullable, up_attr_spec_id, state, date_format(create_date, '%Y-%m-%d %T') create_date, attr_spec_desc, page_in_type,choose_url,detail_url
		from attr_spec where state='A'  and tenant_id=#tenantId# order by attr_spec_id
	</select>
	
	<!-- 根据端点规格ID获取相应的属性规格列表 -->
	<select id="getAttrSpecListByEndpointSpecId" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >		
		select CONVERT(c.attr_spec_id, CHAR) attr_spec_id,c.attr_spec_name,c.attr_spec_code,
		       c.default_value,c.nullable,CONVERT(c.up_attr_spec_id, CHAR) up_attr_spec_id,c.state,
		       CONVERT(DATE_FORMAT(create_date, '%Y-%m-%d %T'), CHAR) create_date,c.attr_spec_desc,
		       CONVERT(b.endpoint_spec_attr_id,CHAR) endpoint_spec_attr_id, b.is_fill_in,c.page_in_type,c.choose_url,c.detail_url,c.portal_url,c.detail_portal_url
		from endpoint_spec a ,endpoint_spec_attr b , attr_spec c
		where a.endpoint_spec_id = b.endpoint_spec_id and b.attr_spec_id=c.attr_spec_id
		and a.endpoint_spec_id=#endpointSpecId# and c.state='A'
		and c.tenant_id=#tenantId#
	</select>					
	
	<!-- 根据路由ID获取端点 -->
	<select id="getEndpointByMessage_Flow_Id" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >	
		select CONVERT(endpoint_id, CHAR) endpoint_id, CONVERT(endpoint_spec_id, CHAR) endpoint_spec_id, 
		       CONVERT(in_data_type_id, CHAR) in_data_type_id, CONVERT(out_data_type_id, CHAR) out_data_type_id, 
		       endpoint_name, endpoint_code, enable_in_trace, enable_out_trace, 
		       enable_in_log, enable_out_log, 
		       CONVERT(DATE_FORMAT(create_date, '%Y-%m-%d %T'), CHAR) create_date, state, 
		       CONVERT(DATE_FORMAT(lastest_date, '%Y-%m-%d %T'), CHAR) lastest_dates, 
		       endpoint_desc, map_code 
		from endpoint
		where endpoint_id in 
		      (select distinct endpoint_id from
		              (select from_endpoint_id endpoint_id from service_route_config where message_flow_id=#message_Flow_Id# and tenant_id=#tenantId#
		               union 
		               select to_endpoint_id endpoint_id from service_route_config where message_flow_id=#message_Flow_Id# and tenant_id=#tenantId#)as endpoint_IdCollection)
		               and  tenant_id=#tenantId#
	</select>
	
	<!-- 根据端点ID获取相应的属性值列表 -->
	<select id="getEndpointAttrValueList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >		
		select CONVERT(a.endpoint_attr_value_id, CHAR) endpoint_attr_value_id,
		     CONVERT(a.endpoint_id, CHAR) endpoint_id,
		     CONVERT(a.endpoint_spec_attr_id, CHAR) endpoint_spec_attr_id,
		     attr_value,long_attr_value
		from endpoint_attr_value a where a.endpoint_id=#endpoint_Id#  and  a.tenant_id=#tenantId#
	</select>		
	
	<!-- 保存端点-->
	<insert id="saveEndpoint" parameterClass="java.util.HashMap" >
		insert into endpoint
		  (endpoint_id,endpoint_spec_id,in_data_type_id,out_data_type_id,endpoint_name,
		   endpoint_code,enable_in_trace,enable_out_trace,enable_in_log,enable_out_log,
		   create_date,state,lastest_date,endpoint_desc,map_code,tenant_id)
		values
		  (#endpoint_Id#,#endpoint_Spec_Id#,#in_Data_Type_Id#,#out_Data_Type_Id#,#endpoint_Name#,
		   #endpoint_Code#,#enable_In_Trace#,#enable_Out_Trace#,#enable_In_Log#,#enable_Out_Log#,
		   now(),#state#,str_to_date(#lastest_Date#,'%Y-%m-%d %H:%i:%s'),#endpoint_Desc#,#map_Code#,#tenantId#)
	</insert>
	
	<!-- 保存端点规格属性值-->
	<insert id="saveEndpointAttrValue" parameterClass="java.util.HashMap" >
		<selectKey resultClass="long" keyProperty="endpoint_attr_value_id">
		 	SELECT nextval('SEQ_ENDPOINT_ATTR_VAL');
    	</selectKey>
		insert into endpoint_attr_value
		  (endpoint_attr_value_id,endpoint_id,endpoint_spec_attr_id,attr_value,long_attr_value,tenant_id)
		values
		  (#endpoint_attr_value_id#,#endpoint_Id#,#endpoint_Spec_Attr_Id#,#attr_Value#,#long_Attr_Value#,#tenantId#)
	</insert>	
	
	<!-- 根据ID删除消息流端点-->
	<delete id="deleteEndpoints" parameterClass="java.util.HashMap" >	
		delete from endpoint
		where endpoint_id in 
		      (select distinct endpoint_id from
		              (select from_endpoint_id endpoint_id from service_route_config where message_flow_id=#messageFlowId# and tenant_id=#tenantId#
		               union 
		               select to_endpoint_id endpoint_id from service_route_config where message_flow_id=#messageFlowId# and tenant_id=#tenantId#)as endpoint_IdCollection)
		 and tenant_id=#tenantId#              
	</delete>
	
	<!-- 根据ID删除消息流端点-->
	<delete id="deleteEndpointAttrValues" parameterClass="java.util.HashMap" >	
		delete from endpoint_attr_value
		where endpoint_id in 
		      (select distinct endpoint_id from
		              (select from_endpoint_id endpoint_id from service_route_config where message_flow_id=#messageFlowId# and tenant_id=#tenantId#
		               union 
		               select to_endpoint_id endpoint_id from service_route_config where message_flow_id=#messageFlowId# and tenant_id=#tenantId#)as endpoint_IdCollection)	
		       and tenant_id=#tenantId#	
	</delete>	
	<!-- 获取端点规格列表 -->
	<select id="getEndpointSpecListByPortal" parameterClass="java.util.HashMap" resultClass="java.util.HashMap" >		
		select CONVERT(endpoint_spec_id, CHAR) endpoint_spec_id, endpoint_spec_code, endpoint_spec_name, 
			endpoint_spec_desc, state, endpoint_spec_pic ,endpoint_spec_pro_url
		from endpoint_spec where state='A' and IS_PORTAL = 'Y'  order by sort asc
	</select>
	<!-- ###############    结束     ################################## -->
</sqlMap>